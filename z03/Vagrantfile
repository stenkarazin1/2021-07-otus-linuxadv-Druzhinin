# -*- mode: ruby -*-
# vi: set ft=ruby :

# Sample vagrantfile to create 2 hosts
# VM's start with 2 interface. The usual NAT interface (enp0s3) for management and a "private network"
# so the two VM can "see" each other.

# You just have to change the "keepalived_shared_ip" depending on which IP network you have
# configured in your private network

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "ubuntu/bionic64"

  config.vm.box_check_update = false

  config.vm.define "node1" do |node1|
    node1.vm.hostname = "node1"
    node1.vm.network "private_network", ip: "10.0.8.2"
    node1.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbook.yml"
      ansible.vault_password_file = "vault_pass.txt"  # vars.yaml encrypted by Ansible Vault, password is in vault_pass.txt
      ansible.extra_vars ={#keepalived_role: "MASTER",
                            keepalived_shared_iface: "enp0s8",
                            keepalived_shared_ip: "10.0.8.8/24"  }
    end
    node1.vm.provision "shell",
      inline: "ip a"
  end

  config.vm.define "node2" do |node2|
    node2.vm.hostname = "node2"
    node2.vm.network "private_network", ip: "10.0.8.3"
    node2.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbook.yml"
      ansible.vault_password_file = "vault_pass.txt"  # vars.yaml encrypted by Ansible Vault, password is in vault_pass.txt
      ansible.extra_vars ={ keepalived_role: "role1",
                            keepalived_shared_iface: "enp0s8",
                            keepalived_shared_ip: "10.0.8.8/24"  }
    end
    node2.vm.provision "shell",
      inline: "ip a"
  end

end

